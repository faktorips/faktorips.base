additionalAnnotationsDescription=Hier k\u00F6nnen die qualifizierten Namen f\u00FCr zus\u00E4tzliche Annotationen eingestellt werden, die an alle generierten Methoden angeh\u00E4ngt werden (z.B. java.lang.SuppressWarnings oder javax.annotation.Generated("org.faktorips.devtools.stdbuilder")). Mehrere Annotationen werden mit Strichpunkt getrennt.
additionalAnnotationsLabel=Zus\u00E4tzliche Annotations generieren 
builderClassesDescription=Builder vereinfachen den Aufbau von Teststrukturen.
builderClassesLabel=Builder-Klassen generieren
baseClassPolicyComponentLabel=Basisklasse f\u00FCr Vertragsklassen
baseClassPolicyComponentDescription=Qualifizierter Name der Basisklasse f\u00FCr Vertragsklassen. Falls ein leerer String angegeben wird, wird die Defaultbasisklasse benutzt.
baseClassProductComponentLabel=Basisklasse f\u00FCr Produktklassen
baseClassProductComponentDescription=Qualifizierter Name der Basisklasse f\u00FCr Produktklassen. Falls ein leerer String angegeben wird, wird die Defaultbasisklasse benutzt.
camelCaseSeparatedDescription=Konstantennamen f\u00FCr Camel-Case-Properties mit Unterstrich trennen.
camelCaseSeparatedLabel=Camel-Case-Trennung in Konstantennamen
changesOverTimeNamingConventionLabel=Namensschema f\u00FCr \u00C4nderungen im Zeitablauf
changesOverTimeNamingConventionDescription=Diese Einstellung wird aus dem Root-Attribut 'changesInTimeNamingConvention' der .ipsproject-Datei \u00FCbernommen.
formulaCompilingDescription=Legt fest wohin Formeln kompiliert werden.
formulaCompilingLabel=Formel-Kompilierung
generateChangeListenerDescription=Generiert Unterst\u00FCtzung f\u00FCr das Listener-Pattern in allen Vertragsklassen.
generateChangeListenerLabel=Change-Listener generieren
generateConvenienceGettersDescription=Generiert Getter-Methoden f\u00FCr Produkt-Attribute in produktkonfigurierten Vertragsklassen.
generateConvenienceGettersLabel=Getter f\u00FCr Produktattribute in Vertragsklassen
generateCopySupportDescription=Generiert copy-Methoden in Vertagsklassen.
generateCopySupportLabel=Copy-Support generieren
generateDeltaSupportDescription=Generiert einen Mechanismus zur Ermittelung von Modell-Unterschieden.
generateDeltaSupportLabel=Delta-Support generieren
generateJaxbSupportDescription=Generiert JAXB-Annotationen in Vertragsklassen.
generateJaxbSupportLabel=JAXB-Support generieren
generatePublishedInterfacesDescription=Generiert nur Implementierungsklassen (false) oder auch Published Interfaces (true)
generatePublishedInterfacesLabel=Published Interfaces generieren
generateVisitorSupportDescription=Generiert Unterst\u00FCtzung f\u00FCr das Visitor-Pattern in allen Vertragsklassen.
generateVisitorSupportLabel=Visitor-Support generieren
generatorLocaleDescription=Die Sprache in der Code und Dokumentation generiert werden. Derzeit werden die Werte de und en unterst\u00FCtzt.
generatorLocaleLabel=Generator-Sprache
minimalJavadocDescription=Generiert nur die n\u00F6tigsten Javadoc-Kommentare wie @generated, sowie Dokumentation aus dem Modell.
minimalJavadocLabel=Weniger Kommentare generieren
ipsstdbuilderset=Standard Faktor-IPS Generator
localDateDatatypeHelperVariantDescription=Hier kann die Variante der DatatypeHelper definiert werden, die f\u00FCr die Local* Datatypes (LocalDate, LocalDateTime, LocalTime) verwendet wird. M\u00F6glich sind Joda oder Java8
localDateDatatypeHelperVariantLabel=LocalDate-DatatypeHelper-Variante
loggingFrameworkConnectorDescription=Der Logging Konnektor der im generierten Code verwendet werden soll. Wenn "None" ausgew\u00E4hlt ist, wird kein Logging generiert. Im Standard sind die Konnektoren "org.faktorips.devtools.core.javaUtilLoggingConnector" und "org.faktorips.devtools.core.log4jLoggingConnector" enthalten. Neue Konnektoren werden mit dem Extension Point "org.faktorips.devtools.core.loggingFrameworkConnector" registriert.
loggingFrameworkConnectorLabel=Logging Framework Connector
markNoneMergeableResourcesAsDerivedDescription=Nicht mergebare Ressourcen als abgeleitet markieren.
markNoneMergeableResourcesAsDerivedLabel=Abgeleitete Ressourcen
persistenceProviderDescription=Der Persistence-Provider, der zur Generierung herstellerspezifischen Codes verwendet wird. Derzeit werden die Provider 'EclipseLink 1.1', 'EclipseLink 2.5', 'Generic JPA 2.0' und 'Generic JPA 2.1' unterst\u00FCtzt.
persistenceProviderLabel=Persistence-Provider
retainAnnotationsDescription=Hier k\u00F6nnen die Namen f\u00FCr Annotationen eingestellt werden, die, wenn manuell hinzugef\u00FCgt, an generierten Methoden nicht entfernt werden (z.B. Override). Mehrere Annotationen werden mit Strichpunkt getrennt. Wird die Annotation qualifiziert verwendet (z.B. weil es mehrere Annotationen mit gleichem unqualifiziertem Namen gibt) muss der Name hier qualifiziert angegeben werden, ansonsten unqualifiziert.
retainAnnotationsLabel=Annotations behalten 
serializablePolicyCmptsDescription=L\u00E4sst alle generierten Klassen Serializable implementieren.
serializablePolicyCmptsLabel=Serializable-Support generieren
toXMLSupportDescription=Generiert toXml()-Methoden in Produktbaustein und -generationsklassen.
toXMLSupportLabel=toXML-Support generieren
