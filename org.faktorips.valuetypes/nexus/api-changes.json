{
  "all-versions": [
    {
      "extension": "revapi.filter",
      "configuration": {
        "elements": {
          "exclude": [
            "(missing-class|class|interface|field|method .*) javax\\.xml\\.bind\\..*",
            "(missing-class|class|interface|field|method .*) org\\.faktorips\\.values\\.xml\\..*"
          ]
        }
      }
    }
  ],
  "19.12.0": [
    {
      "extension": "revapi.differences",
      "configuration": {
        "ignore": true,
        "differences": [
          {
            "code": "java.method.removed",
            "old": "method boolean org.faktorips.valueset.DefaultRange<T extends java.lang.Comparable<? super T extends java.lang.Comparable<? super T>>>::contains(java.lang.Object)",
            "justification": "FIPS-5811"
          },
          {
            "code": "java.method.parameterTypeParameterChanged",
            "old": "parameter boolean org.faktorips.valueset.OrderedValueSet<E>::contains(===java.lang.Object===)",
            "new": "parameter boolean org.faktorips.valueset.OrderedValueSet<E>::contains(===E===)",
            "justification": "FIPS-5811"
          },
          {
            "code": "java.method.parameterTypeParameterChanged",
            "old": "parameter boolean org.faktorips.valueset.UnrestrictedValueSet<T>::contains(===java.lang.Object===)",
            "new": "parameter boolean org.faktorips.valueset.UnrestrictedValueSet<T>::contains(===T===)",
            "justification": "FIPS-5811"
          },
          {
            "code": "java.method.parameterTypeParameterChanged",
            "old": "parameter boolean org.faktorips.valueset.ValueSet<T>::contains(===java.lang.Object===)",
            "new": "parameter boolean org.faktorips.valueset.ValueSet<T>::contains(===T===)",
            "justification": "FIPS-5811"
          }
        ]
      }
    }
  ],
  "20.12.0": [
    {
      "extension": "revapi.differences",
      "configuration": {
        "ignore": true,
        "differences": [
          {
            "regex": true,
            "code": "java.missing.oldSuperType",
            "old": "class org.faktorips.values.xml..*Adapter",
            "new": "class org.faktorips.values.xml..*Adapter",
            "superClass": "javax.xml.bind.annotation.adapters.XmlAdapter<.*>",
            "justification": "Java 11"
          },
          {
            "code": "java.method.finalMethodAddedToNonFinalClass",
            "new": "method org.faktorips.values.Money org.faktorips.values.Money::valueOf(org.faktorips.values.Decimal, java.util.Currency, java.math.RoundingMode)",
            "justification": "FIPS-6234: Use RoundingMode enum instead of BigDecimal rounding mode int constants"
          },
          {
            "code": "java.annotation.added",
            "old": "method boolean org.faktorips.valueset.BigDecimalRange::checkIfValueCompliesToStepIncrement(java.math.BigDecimal, java.math.BigDecimal)",
            "new": "method boolean org.faktorips.valueset.BigDecimalRange::checkIfValueCompliesToStepIncrement(java.math.BigDecimal, java.math.BigDecimal)",
            "annotation": "@edu.umd.cs.findbugs.annotations.SuppressFBWarnings(value = {\"RV_RETURN_VALUE_IGNORED\"}, justification = \"Only exceptions are of interest, the return value is not needed\")",
            "justification": "Only exceptions are of interest, the return value is not needed"
          },
          {
            "code": "java.annotation.added",
            "old": "method boolean org.faktorips.valueset.DecimalRange::checkIfValueCompliesToStepIncrement(org.faktorips.values.Decimal, org.faktorips.values.Decimal)",
            "new": "method boolean org.faktorips.valueset.DecimalRange::checkIfValueCompliesToStepIncrement(org.faktorips.values.Decimal, org.faktorips.values.Decimal)",
            "annotation": "@edu.umd.cs.findbugs.annotations.SuppressFBWarnings(value = {\"RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\"}, justification = \"Only exceptions are of interest, the return value is not needed\")",
            "justification": "Only exceptions are of interest, the return value is not needed"
          },
          {
            "code": "java.annotation.added",
            "old": "method boolean org.faktorips.valueset.MoneyRange::checkIfValueCompliesToStepIncrement(org.faktorips.values.Money, org.faktorips.values.Money)",
            "new": "method boolean org.faktorips.valueset.MoneyRange::checkIfValueCompliesToStepIncrement(org.faktorips.values.Money, org.faktorips.values.Money)",
            "annotation": "@edu.umd.cs.findbugs.annotations.SuppressFBWarnings(value = {\"RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\"}, justification = \"Only exceptions are of interest, the return value is not needed\")",
            "justification": "Only exceptions are of interest, the return value is not needed"
          }
        ]
      }
    }
  ],
  "21.6.2": [
  {
    "extension": "revapi.differences",
    "configuration": {
      "ignore": true,
      "differences": [
        {
          "code": "java.method.added",
          "new": "method boolean org.faktorips.valueset.DefaultRange<T extends java.lang.Comparable<? super T>>::isUnrestricted(boolean)",
          "justification": "FIPS-7980"
        },
        {
          "code": "java.method.added",
          "new": "method boolean org.faktorips.valueset.StringLengthValueSet::isUnrestricted(boolean)",
          "justification": "FIPS-7980"
        },
        {
          "code": "java.method.added",
          "new": "method boolean org.faktorips.valueset.UnrestrictedValueSet<T>::isUnrestricted(boolean)",
          "justification": "FIPS-7980"
        },
        {
          "code": "java.method.added",
          "new": "method boolean org.faktorips.valueset.OrderedValueSet<E>::isUnrestricted(boolean)",
          "justification": "FIPS-7980"
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method boolean org.faktorips.valueset.ValueSet<T>::isUnrestricted(boolean)",
          "justification": "FIPS-7980"
        }
      ]
    }
   }
  ]
}
