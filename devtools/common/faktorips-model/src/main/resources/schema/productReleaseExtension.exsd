<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.faktorips.devtools.model" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.faktorips.devtools.model" id="releaseDeploymentExtension" name="Release Deployment Extension"/>
      </appInfo>
      <documentation>
         With this extension point you could register an extension for the release deployment process. You have to implement the interface IReleaseAndDeploymentOperation that provides the available target platforms and the concrete implementation of the deployment process.
To validate the version format you have to specify the correct version format by a regular expression and a user readable representation of the format.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="releaseExtension"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="releaseExtension">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  This attribute identifies the release extension. The id have to be set in the ips project to reference the release extension used for the project.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="operation" type="string" use="required">
            <annotation>
               <documentation>
                  An implementaion of IDeploymentOperation that provides the available target systems and implements the concrete deployment.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.faktorips.devtools.model.productrelease.IReleaseAndDeploymentOperation"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="versionFormatRegex" type="string">
            <annotation>
               <documentation>
                  A java regular expression that describes the valid version format. Keep in mind to escape reserved characters. For eclipse version format (1.2.1.rfinal) use the following regular expression: [0-9]+\.[0-9]+\.[0-9]+\.[a-z]+

This attribute is optional because it is only relevant if you are using the default version provider and store the version information in the ips project configuration directly. If you use any other version provider the inforamation is retrieved directly from the specific versin provider.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="readableVersionFormat" type="string">
            <annotation>
               <documentation>
                  A readable representation of the valid version format. For example X.X.X-text or any example of a version. It is used to help the user enter the correct format.

This attribute is optional because it is only relevant if you are using the default version provider and store the version information in the ips project configuration directly. If you use any other version provider the inforamation is retrieved directly from the specific versin provider.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="versionMustChange" type="boolean">
            <annotation>
               <documentation>
                  A flag to indicate whether the new version has to be different from the old one. Defaults to true if not set.

This attribute is optional because it is only relevant if you are using the release extension to build snapshot versions.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.1
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
