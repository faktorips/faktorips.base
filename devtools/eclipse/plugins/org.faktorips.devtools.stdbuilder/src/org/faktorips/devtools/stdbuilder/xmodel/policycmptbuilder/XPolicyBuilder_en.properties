# {0} Unqualified name of the published interface.
CLASS_JAVADOC=This class provides methods to edit a {0}.

# {0} The unqualified policy component class name.
CONSTRUCTOR_WITH_REPO_JAVADOC=Creates a new {0} with a given policy and runtime repository.
CONSTRUCTOR_INTERNAL_JAVADOC=This constructor is only to be used internally by the builder!

METHOD_ASS_STD_JAVADOC=Set a existing instance of {0} as the target of the association {1}.
METHOD_ASS_PROD_JAVADOC=Creates a new instance of {0} from a given product component and sets it as the target of the association {1}.
METHOD_ASS_JAVADOC=Creates a new instance of {0} and set it as the target of the association {1}.
METHOD_ASS_TYPE_JAVADOC=Creates a new instance of a subclass of {0} with the given builder and sets it as the target of the association {1}.
METHOD_ASS_TYPE_ID_JAVADOC=Creates a new instance of a subclass of {0} with the given product component and sets it as the target of the association {1}.

METHOD_GET_VALUE_JAVADOC=Returns the {0} that is built by this instance.

METHOD_DEFAULT_STRUC_JAVADOC=Instantiate the default structure given by the product component. Returns the builder itself.

EXCEPTION_NO_REPOSITORY=No repository given! 

METHOD_WITH_NO_ARG_JAVADOC=Creates a new {0} with a new instance of policy. Runtime repository is set to null.
METHOD_WITH_REPO_JAVADOC=The runtime repository is required as association targets exists that are configured by a product. The product components of the targets must be in the given runtime repository.
METHOD_WITH_PROD_JAVADOC=Creates a new {0} with a new instance of policy created by the given product component.
METHOD_WITH_PROD_ID_JAVADOC=Creates a new {0} with a new instance of policy created by the product component with the given ID in the runtime repository that configures the policy.
METHOD_WITH_PROD_ID_GEN_JAVADOC=The latest generation of the product component is used.
METHOD_WITH_PROD_ID_DATE_JAVADOC=Creates a new {0} with a new instance of policy created by the generation of a product component in the given runtime repository that is valid on the given date.

EXCEPTION_NO_GENERATION_FOUND=No generation valid at the given date!
EXCEPTION_NO_PRODCMPT_FOUND=No product component found with given ID!

METHOD_BUILDER_JAVADOC=Creates a new instance of {0} to edit this policy.
METHOD_BUILDER_REPO_JAVADOC=The runtime repository is used to create configured association targets from existing product components.

METHOD_GET_CLASS_JAVADOC=

METHOD_FROM_JAVADOC=Creates a new {0} with a given {1}.
METHOD_FROM_REPO_JAVADOC=Creates a new {0} with a given {1} and a runtime repository.

CLASS_BUILDER_JAVADOC=This class wraps setter methods for associations. Methods in this class returns a builder for the target class.
CLASS_BUILDER_MULTI_JAVADOC=This class wraps setter methods for associations. Methods in this class return the original {0}.

# {0} The unqualified policy component class name.
CLASS_FACTORY_JAVADOC=This factory class contains methods to create new {0}s.

METHOD_ASSOCIATION_JAVADOC=Returns an '{@link AssociationBuilder}' to build a target object and add directly to a specified association. \
 With the '{@link AssociationBuilder}' you get the builder of the target object for further processing. Use the method '{@link #add()}' \
 if you want to create multiple target objects and always return to this builder instead of the target builder.\n*\n* @see #add()

METHOD_ADD_ASSOCIATION_JAVADOC=Returns an '{@link AddAssociationBuilder}' to build a target object and add directly to a specified association. \
 With the '{@link AddAssociationBuilder}' you always could return to this builder for further processing. Use the method '{@link #associate()}' \
 if you want to have the builder of the target object.\n*\n* @see #associate()

