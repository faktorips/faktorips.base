<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.faktorips.devtools.stdbuilder" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.faktorips.devtools.stdbuilder" id="tocEntryFactory" name="TOC Entry Factory"/>
      </appInfo>
      <documentation>
         A ITocEntryFactory implementation is used to load TocEntryObjects of a given type identified by their XML tag.&lt;br /&gt;
To make a ITocEntryFactory available during design time, it has to be registered with this extension point.
See ITocEntryFactory&apos;s javadoc for details on making the ITocEntryFactory available at runtime.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <choice>
            <element ref="tocEntryFactory"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="tocEntryFactory">
      <annotation>
         <documentation>
            A factory for custom TOC entries. Registered factories will be used by the TableOfContents to read custom TOC entries from the standard TOC file. This should be used with a matching TOC Entry Builder Factory and the TOC Entry Factory should also be registered for a ServiceLoader at runtime.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The qualified Java Class name of the custom TOC Entry Factory.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.faktorips.runtime.internal.toc.ITocEntryFactory"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.6.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
