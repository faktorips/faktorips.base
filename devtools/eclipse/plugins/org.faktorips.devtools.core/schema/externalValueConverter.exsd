<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.faktorips.devtools.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.faktorips.devtools.core" id="externalValueConverter" name="ExternalValueConverter"/>
      </appinfo>
      <documentation>
         Registers classes capable of converting an external representation of a value to a string understood by FaktorIps and vice versa.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="externalTableFormat"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="externalTableFormat">
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="externalValueConverter"/>
         </sequence>
         <attribute name="tableFormatId" type="string" use="required">
            <annotation>
               <documentation>
                  The id of the referenced table format this converter can be used with.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="externalValueConverter">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified class name of the converter. It must implement the interface IValueConverter.
A converter explicitly belongs to a table format, although one converter may be used in conjunction with multiple table formats.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.faktorips.devtools.tableconversion.IValueConverter"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;extension
      point=&quot;org.faktorips.devtools.core.externalValueConverter&quot;&gt;
    &lt;externalTableFormat tableFormatId=&quot;org.abc.MyTableFormat&quot;&gt;
        &lt;externalValueConverter class=&quot;org.abc.BooleanValueConverter&quot;/&gt;
        &lt;externalValueConverter class=&quot;org.abc.DateValueConverter&quot;/&gt;
     &lt; ..... more converters /&gt;
    &lt;/externalTableFormat&gt;     
    &lt;externalTableFormat tableFormatId=&quot;org.abc.OtherTableFormat&quot;&gt;
        &lt;externalValueConverter class=&quot;org.abc.DoubleValueConverter&quot;/&gt;
    &lt;/externalTableFormat&gt;     
&lt;/extension&gt;

         
This example registers multiple value converter classes (for boolean and date and ...) to be used by the external table format &quot;org.abc.MyTableFormat&quot;. Another converter (double) is registered for the &quot;org.abc.OtherTableFormat&quot;.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) Faktor Zehn GmbH. &gt;http://www.faktorzehn.org&lt;

This source code is available under the terms of the AGPL Affero General Public License version 3. 

Please see LICENSE.txt for full license terms, including the additional permissions and restrictions as well as the possibility of alternative license terms.
      </documentation>
   </annotation>

</schema>
