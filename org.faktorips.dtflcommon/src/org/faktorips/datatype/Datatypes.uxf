<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>54</x>
      <y>45</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
/Datatype/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>54</x>
      <y>117</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
/ValueDatatype/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>99</x>
      <y>72</y>
      <w>27</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>126</y>
      <w>153</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>GenericValueDatatype</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>153</x>
      <y>126</y>
      <w>81</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>54</x>
      <y>189</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
/NamedDatatype/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>99</x>
      <y>144</y>
      <w>27</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>54</x>
      <y>261</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
/EnumDatatype/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>99</x>
      <y>216</y>
      <w>27</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>270</y>
      <w>153</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>GenericEnumDatatype</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>153</x>
      <y>270</y>
      <w>81</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>54</y>
      <w>153</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>AbstractDatatype</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>153</x>
      <y>54</y>
      <w>81</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>54</x>
      <y>333</y>
      <w>585</w>
      <h>261</h>
    </coordinates>
    <panel_attributes>A datatype can be either a reference type or a value type. 
In most cases a datatype refers to an existing Java class. 
However the use of a Datatype implementation class allows us to use a datatype when no 
Java class exists (because it is generated later) or the class' methods do not match
the requirements for a datatype.

A value datatype represents a value concept similiar to value classes in Java. 
Examples are Integer, String, Money and so on.

Named datatypes have a human readable name (for example currency symbols like $ and â‚¬
or full names like "annual payment") for every value in addition to a more technical ID.

Enumeration value types like Gender, Payment Mode etc. are represented by EnumDatatypes.

GenericValueDatatype and GenericEnumDatatype allow the use of an existing Java class as 
Datatype by "wrapping" it with an instance of GenericValueDatatype instead of writing
a new class implementing the ValueDatatype/EnumDatatype interface.
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
